#!/usr/bin/env node

// FLUJO:
// PASO 1: AVERIGUAR SOBRE: NODEJS
// PASO 2: LEER TODAS LAS REFERENCIAS DEL README
// PASO 3: PRACTICAR SOBRE PROMESAS
// PASO 4: AVERIGUAR SOBRE EXPERESIONES REGULARES. 
// PASO 5: AVERIGUAR SOBRE FILESYSTEM
// PASO 6: AVERIGUAR SOBRE PATH
// paso 7: AVERIGUAR SOBRE MARKED
// PASO 8: VER REFERENCIAS DE EXTENCIONES NPM QUE REALIZZAN LAS ACCIONES QUE NECESITO
// PASO 9: OBTENER VALORES DESDE LOS COMANDOS DE NPM
// PASO 10: CREAR FUNCION MDLINKS: SOLO INGRESÓ: NODE INDEX.JS ./README.md
// PASO 11: HACER CONSULTA SOBRE URL ¿ES UN DIRECTORIO? = NO ----> ENTONCES ES UN ARCHIVO, IR AL PASO 12 
//                                                      = SI ----> LEER DIRECTORIO
//                                                                 BUSCAR ARCHIVOS MD.
//                                                                 ENCONTRAR ARCHIVOS MD Y RETENERLOS, PARA PASARLOS A LA FUNCIÓN PASO 12
// PASO 12: CONSULTAR POR SI ARCHIVO ES MD, ¿ES MD? = NO ----> INDICAR QUE INGRESEN UN ARCHIVO CON EXTENCIÓN MD
//                                                    SI ----> LEER ARCHIVO EN UTF8
//                                                             EXTRAER LINKS
//                                                             MOSTRAR EN CONSOLA LOS LINKS, EN ORDEN CON NOMBRE Y URL
//                                           
// PASO 13: INCORPORRAR CHALK PARA AGREGAR COLOR A LA CONSOLA :)
// PASO 14: SI CLIENTE INGRESA EN CONSOLA: NODE INDEX.JS ./README.md --VALIDATE.
// PASO 15: SE EJECUTA MDLINKS PASO 11, PERO LA CONDICIÓN ADEMÁS AGREGA A LOS LINKS UN ESTATUS DE OK O BREAK A LOS LINKS
// PASO 16: SI EL CLIENTE INGRESA EN CONSOLA: NODE INDEX.JS ./README.md --STATS
// PASO 17: REALIZA UNA CUENTA DE TODOS LOS LINKS, POR EJEMPLO : 18 DE LOS CUALES 10 ESTAN OK Y  8 ESTAN ROTOS. Y QUE ARROJE LOS QUE ESTAN ROTOS. 

/* let pathUrl = process.argv[2];
let option = process.argv[3]; */

/* promises.mdlinks(pathUrl, option).then((resultado) => {
  console.log(resultado);
}, (error)=>{
  console.log(error);
}); */
